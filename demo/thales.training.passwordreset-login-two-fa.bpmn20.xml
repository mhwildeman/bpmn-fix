      <?xml version="1.0" encoding="UTF-8"?>
      <definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL"
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:activiti="http://activiti.org/bpmn"
                  typeLanguage="http://www.w3.org/2001/XMLSchema" expressionLanguage="http://www.w3.org/1999/XPath"
                  targetNamespace="http://www.iwelcome.com/registration">
        <process id="thales.training.passwordreset-login-two-fa" name="Password reset flow" isExecutable="true">
          <startEvent id="pwdreset_start_event" name="Start"/>
          <sequenceFlow sourceRef="pwdreset_start_event" targetRef="generate_process_token"/>

          <serviceTask id="generate_process_token" name="generate_process_token" activiti:delegateExpression="${generateProcessTokenTask}"/>
          <sequenceFlow sourceRef="generate_process_token" targetRef="email_form_task"/>

          <!-- Ask user for identifying value input -->
          <userTask id="email_form_task" name="pwd_reset_user_identification_step"/>
          <sequenceFlow sourceRef="email_form_task" targetRef="check_if_identifying_value_is_provided"/>
          <!-- End user input -->

          <!-- Check if identifying value is provided -->
          <serviceTask id="check_if_identifying_value_is_provided" activiti:delegateExpression="${inputProvidedTask}">
            <extensionElements>
              <activiti:field name="fieldNames" stringValue="identifyingValue"/>
            </extensionElements>
          </serviceTask>
          <sequenceFlow sourceRef="check_if_identifying_value_is_provided" targetRef="identifying_value_provided_decision"/>

          <!-- Exclusive gateway for identifying value-->
          <exclusiveGateway id="identifying_value_provided_decision"/>
          <sequenceFlow id="is_identifying_value_provided_flow" sourceRef="identifying_value_provided_decision" targetRef="validate_identifying_value_task">
            <conditionExpression xsi:type="tFormalExpression">${isStepSuccessful == true}</conditionExpression>
          </sequenceFlow>
          <sequenceFlow id="is_identifying_value_not_provided_flow" sourceRef="identifying_value_provided_decision" targetRef="email_form_task">
            <conditionExpression xsi:type="tFormalExpression">${isStepSuccessful == false}</conditionExpression>
          </sequenceFlow>
          <!-- End to check identifying value -->

          <!-- Validate user input according to rules defined -->
          <serviceTask id="validate_identifying_value_task" name="pwd_reset_validate_identifying_value_step" activiti:delegateExpression="${validationTask}"/>
          <sequenceFlow sourceRef="validate_identifying_value_task" targetRef="validate_identifying_value_decision"/>

          <exclusiveGateway id="validate_identifying_value_decision" name="validate_identifying_value_gateway" />
          <sequenceFlow id="is_valid_identifying_value_flow" sourceRef="validate_identifying_value_decision" targetRef="get_user_service">
            <conditionExpression xsi:type="tFormalExpression">${isStepSuccessful == true}</conditionExpression>
          </sequenceFlow>
          <sequenceFlow id="is_not_valid_identifying_value_flow" sourceRef="validate_identifying_value_decision" targetRef="email_form_task">
            <conditionExpression xsi:type="tFormalExpression">${isStepSuccessful == false}</conditionExpression>
          </sequenceFlow>
          <!-- End validation -->

          <!-- Retrieve the user by identifying value -->
          <serviceTask id="get_user_service" name="get_user_service" activiti:delegateExpression="${getUserTask}"/>
          <sequenceFlow sourceRef="get_user_service" targetRef="user_found_decision"/>

          <exclusiveGateway id="user_found_decision" name="user_found_gateway" />
          <sequenceFlow id="is_user_found_flow" sourceRef="user_found_decision" targetRef="validate_user_state">
            <conditionExpression xsi:type="tFormalExpression">${isStepSuccessful == true}</conditionExpression>
          </sequenceFlow>

          <sequenceFlow id="is_user_not_found_flow" sourceRef="user_found_decision" targetRef="email_sending_failed_step">
            <conditionExpression xsi:type="tFormalExpression">${isStepSuccessful == false}</conditionExpression>
          </sequenceFlow>
          <!-- End user retrieval -->

          <!-- Validate user state -->
          <exclusiveGateway id="validate_user_state"/>
          <sequenceFlow id="user_valid_state" sourceRef="validate_user_state" targetRef="generate_password_reset_requested_event">
            <conditionExpression xsi:type="tFormalExpression">
              <![CDATA[${execution.getVariable('userState') != null && userState != 'GRACE'}]]>
            </conditionExpression>
          </sequenceFlow>
          <sequenceFlow id="is_user_invalid_state" sourceRef="validate_user_state" targetRef="email_sending_failed_step">
            <conditionExpression xsi:type="tFormalExpression">
              <![CDATA[${execution.getVariable('userState') != null && userState == 'GRACE'}]]>
            </conditionExpression>
          </sequenceFlow>
          <!-- End validation -->

          <serviceTask id="generate_password_reset_requested_event" activiti:delegateExpression="${eventPublisherTask}">
            <extensionElements>
              <activiti:field name="eventType" stringValue="PASSWORD_RESET_REQUEST"/>
            </extensionElements>
          </serviceTask>
          <sequenceFlow sourceRef="generate_password_reset_requested_event" targetRef="validate_two_fa_factor_task"/>

          <!-- Validate is two fa or one fa -->
          <serviceTask id="validate_two_fa_factor_task" name="validate_two_fa_flow_set_step" activiti:delegateExpression="${twoFaValidationTask}"/>
          <sequenceFlow sourceRef="validate_two_fa_factor_task" targetRef="validate_user_role"/>

          <exclusiveGateway id="validate_user_role"/>
          <sequenceFlow id="user_pwd_reset_flow_type_two_fa" sourceRef="validate_user_role" targetRef="validate_email_set_task">
            <conditionExpression xsi:type="tFormalExpression">
              <![CDATA[${execution.getVariable('pwdResetFlowType') == '2FA'}]]>
            </conditionExpression>
          </sequenceFlow>
          <sequenceFlow id="user_pwd_reset_flow_type_one_fa" sourceRef="validate_user_role" targetRef="validate_one_fa_attributes">
            <conditionExpression xsi:type="tFormalExpression">
              <![CDATA[${execution.getVariable('pwdResetFlowType') != '2FA'}]]>
            </conditionExpression>
          </sequenceFlow>
          <!-- End validation -->

          <!--  check for one fa if its email or otp or both -->
          <exclusiveGateway id="validate_one_fa_attributes"/>
          <sequenceFlow id="user_two_factors" sourceRef="validate_one_fa_attributes" targetRef="pwd_reset_selection_step_sms_or_email_decision">
            <conditionExpression xsi:type="tFormalExpression">
              <![CDATA[${execution.getVariable('phone') != null && execution.getVariable('email') != null}]]>
            </conditionExpression>
          </sequenceFlow>
          <sequenceFlow id="user_one_factor" sourceRef="validate_one_fa_attributes" targetRef="validate_email_set_task">
            <conditionExpression xsi:type="tFormalExpression">
              <![CDATA[${execution.getVariable('phone') ==  null}]]>
            </conditionExpression>
          </sequenceFlow>
          <!-- End to check one fa -->

          <userTask id="pwd_reset_selection_step_sms_or_email_decision" name="pwd_reset_selection_step_sms_or_email_decision"/>
          <sequenceFlow sourceRef="pwd_reset_selection_step_sms_or_email_decision" targetRef="check_if_option_is_provided"/>

          <!-- Check if option value is provided -->
          <serviceTask id="check_if_option_is_provided" activiti:delegateExpression="${inputProvidedTask}">
            <extensionElements>
              <activiti:field name="fieldNames" stringValue="option"/>
            </extensionElements>
          </serviceTask>
          <sequenceFlow sourceRef="check_if_option_is_provided" targetRef="option_provided_decision"/>

          <!-- Exclusive gateway for option value -->
          <exclusiveGateway id="option_provided_decision"/>
          <sequenceFlow id="is_option_provided_flow" sourceRef="option_provided_decision" targetRef="decision_1fa_flow_task">
            <conditionExpression xsi:type="tFormalExpression">${isStepSuccessful == true}</conditionExpression>
          </sequenceFlow>
          <sequenceFlow id="is_option_not_provided_flow" sourceRef="option_provided_decision" targetRef="pwd_reset_selection_step_sms_or_email_decision">
            <conditionExpression xsi:type="tFormalExpression">${isStepSuccessful == false}</conditionExpression>
          </sequenceFlow>
          <!-- End to check option -->

          <!-- Validate user input according to rules defined -->
          <serviceTask id="decision_1fa_flow_task" name="decision_1fa_flow_set_step" activiti:delegateExpression="${oneFaDecisionTask}"/>
          <sequenceFlow sourceRef="decision_1fa_flow_task" targetRef="module_step_decision_gateway"/>

          <exclusiveGateway id="module_step_decision_gateway" name="module_step_decision_gateway"/>
          <sequenceFlow id="is_email_module_set" sourceRef="module_step_decision_gateway" targetRef="validate_email_set_task">
            <conditionExpression xsi:type="tFormalExpression">${option == 'email'}</conditionExpression>
          </sequenceFlow>
          <sequenceFlow id="is_otp_module_set" sourceRef="module_step_decision_gateway" targetRef="send_sms_task">
            <conditionExpression xsi:type="tFormalExpression">${option == 'otp'}</conditionExpression>
          </sequenceFlow>
          <sequenceFlow id="is_module_not_set" sourceRef="module_step_decision_gateway" targetRef="pwd_reset_selection_step_sms_or_email_decision">
            <conditionExpression xsi:type="tFormalExpression">${isStepSuccessful == false}</conditionExpression>
          </sequenceFlow>
          <!-- End validation -->

          <!-- SEND SMS -->
          <serviceTask id="send_sms_task" name="send_sms_step" activiti:delegateExpression="${smsSenderTask}"/>

          <sequenceFlow id="step_from_send_sms_task_to_sms_validation_decision" sourceRef="send_sms_task" targetRef="send_sms_step_decision"/>

          <exclusiveGateway id="send_sms_step_decision" name="send_sms_step_validation_gateway" />
          <sequenceFlow id="step_from_send_sms_success" sourceRef="send_sms_step_decision" targetRef="pwd_reset_sms_code_validation">
            <conditionExpression xsi:type="tFormalExpression">${isStepSuccessful == true}</conditionExpression>
          </sequenceFlow>
          <sequenceFlow id="step_from_send_sms_failed" sourceRef="send_sms_step_decision" targetRef="send_sms_fail_step">
            <conditionExpression xsi:type="tFormalExpression">${isStepSuccessful == false}</conditionExpression>
          </sequenceFlow>

          <userTask id="send_sms_fail_step" name="send_sms_fail_step"/>
          <sequenceFlow sourceRef="send_sms_fail_step" targetRef="pwd_reset_end_event"/>

          <userTask id="pwd_reset_sms_code_validation" name="pwd_reset_sms_code_validation"/>

          <sequenceFlow id="step_from_sms_sent" sourceRef="pwd_reset_sms_code_validation" targetRef="sms_code_validation_task"/>

          <serviceTask id="sms_code_validation_task" name="sms_code_validation_task" activiti:delegateExpression="${smsCodeValidationTask}"/>

          <sequenceFlow id="step_from_sms_validation" sourceRef="sms_code_validation_task" targetRef="sms_code_validation_decision"/>


          <exclusiveGateway id="sms_code_validation_decision" name="sms_code_validation_decision" />

          <sequenceFlow id="resend_sms" sourceRef="sms_code_validation_decision" targetRef="send_sms_task">
            <conditionExpression xsi:type="tFormalExpression">
              <![CDATA[${execution.getVariable('resendSms') !=  null && execution.getVariable('resendSms') == true}]]>
            </conditionExpression>
          </sequenceFlow>
          <sequenceFlow id="invalid_input_to_resend_sms" sourceRef="sms_code_validation_decision" targetRef="pwd_reset_sms_code_validation">
            <conditionExpression xsi:type="tFormalExpression">
              <![CDATA[${execution.getVariable('resendSms') !=  null && execution.getVariable('resendSms') == false}]]>
            </conditionExpression>
          </sequenceFlow>
          <sequenceFlow id="step_from_sms_code_validation_success" sourceRef="sms_code_validation_decision" targetRef="reset_password_user_task">
            <conditionExpression xsi:type="tFormalExpression">${isStepSuccessful == true}</conditionExpression>
          </sequenceFlow>
          <sequenceFlow id="step_from_sms_code_validation_max_attempts_is_met" sourceRef="sms_code_validation_decision" targetRef="validate_sms_fail_step">
            <conditionExpression xsi:type="tFormalExpression">
              <![CDATA[${execution.getVariable("ERRORS") != null
              && (execution.getVariable("ERRORS").get(0).errorCode == "WFA000034")}]]>
            </conditionExpression>
          </sequenceFlow>
          <sequenceFlow id="step_from_sms_code_validation_failed" sourceRef="sms_code_validation_decision" targetRef="pwd_reset_sms_code_validation">
            <conditionExpression xsi:type="tFormalExpression">${isStepSuccessful == false}</conditionExpression>
          </sequenceFlow>

          <userTask id="validate_sms_fail_step" name="validate_sms_fail_step"/>
          <sequenceFlow sourceRef="validate_sms_fail_step" targetRef="pwd_reset_end_event"/>

          <!-- Validate user input according to rules defined -->
          <serviceTask id="validate_email_set_task" name="pwd_reset_validate_email_set_step" activiti:delegateExpression="${validationTask}"/>
          <sequenceFlow sourceRef="validate_email_set_task" targetRef="validation_email_set_decision"/>

          <exclusiveGateway id="validation_email_set_decision" name="user_task_2_validation_gateway" />
          <sequenceFlow id="is_valid_email_set_flow" sourceRef="validation_email_set_decision" targetRef="delete_unused_user_token_service">
            <conditionExpression xsi:type="tFormalExpression">${isStepSuccessful == true}</conditionExpression>
          </sequenceFlow>
          <sequenceFlow id="is_not_valid_email_set_flow" sourceRef="validation_email_set_decision" targetRef="pwd_reset_end_event">
            <conditionExpression xsi:type="tFormalExpression">${isStepSuccessful == false}</conditionExpression>
          </sequenceFlow>
          <!-- End validation -->

          <!-- SEND EMAIL -->
          <serviceTask id="delete_unused_user_token_service" name="delete_unused_user_token_step" activiti:delegateExpression="${deleteUnusedTokensTask}">
            <extensionElements>
              <activiti:field name="tokenType" stringValue="PASSWORD_RESET_TOKEN"/>
            </extensionElements>
          </serviceTask>
          <sequenceFlow sourceRef="delete_unused_user_token_service" targetRef="generate_token"/>

          <serviceTask id="generate_token" name="generate_activation_token" activiti:delegateExpression="${generateTokenTask}">
            <extensionElements>
              <activiti:field name="tokenType" stringValue="PASSWORD_RESET_TOKEN"/>
            </extensionElements>
          </serviceTask>
          <sequenceFlow sourceRef="generate_token" targetRef="token_generation_gateway"/>

          <exclusiveGateway id="token_generation_gateway" name="token_generation_gateway"/>
          <sequenceFlow id="token_generation_success" sourceRef="token_generation_gateway" targetRef="email_sender_task">
            <conditionExpression xsi:type="tFormalExpression">${isStepSuccessful == true}</conditionExpression>
          </sequenceFlow>
          <sequenceFlow id="token_generation_failed" sourceRef="token_generation_gateway" targetRef="email_sent_task">
            <conditionExpression xsi:type="tFormalExpression">${isStepSuccessful == false}</conditionExpression>
          </sequenceFlow>

          <serviceTask id="email_sender_task" name="send_email_task" activiti:delegateExpression="${emailSenderTask}">
            <extensionElements>
              <activiti:field name="emailTemplate" stringValue="passwordreset"/>
              <activiti:field name="tokenType" stringValue="PASSWORD_RESET_TOKEN"/>
            </extensionElements>
          </serviceTask>
          <sequenceFlow id="step6" sourceRef="email_sender_task" targetRef="email_sent_task"/>
          <!-- END SEND EMAIL -->

          <!-- Wait for user clicking on the reset email -->
          <userTask id="email_sent_task" name="pwd_reset_email_sent_step"/>
          <sequenceFlow sourceRef="email_sent_task" targetRef="wait_for_email_click"/>

          <boundaryEvent id="email_sent_task_timer" attachedToRef="email_sent_task">
            <timerEventDefinition>
              <timeDuration>PT1S</timeDuration>
            </timerEventDefinition>
          </boundaryEvent>
          <sequenceFlow sourceRef="email_sent_task_timer" targetRef="wait_for_email_click"/>

          <userTask id="wait_for_email_click" name="UT_wait_for_email_click"/>
          <sequenceFlow sourceRef="wait_for_email_click" targetRef="token_validator_task"/>

          <!-- Validate token's correctness -->
          <serviceTask id="token_validator_task" name="activation_token_step" activiti:delegateExpression="${validateTokenTask}"/>
          <sequenceFlow sourceRef="token_validator_task" targetRef="token_validation_gateway"/>

          <exclusiveGateway id="token_validation_gateway" name="token_validation_gateway" />
          <sequenceFlow id="is_valid_token_flow" sourceRef="token_validation_gateway" targetRef="decision_two_fa_or_one_fa">
            <conditionExpression xsi:type="tFormalExpression">${isStepSuccessful == true}</conditionExpression>
          </sequenceFlow>
          <sequenceFlow id="is_not_valid_token_flow" sourceRef="token_validation_gateway" targetRef="token_validation_failed">
            <conditionExpression xsi:type="tFormalExpression">${isStepSuccessful == false}</conditionExpression>
          </sequenceFlow>

          <exclusiveGateway id="decision_two_fa_or_one_fa"/>
          <sequenceFlow id="is_option_two_fa" sourceRef="decision_two_fa_or_one_fa" targetRef="send_sms_task">
            <conditionExpression xsi:type="tFormalExpression">
              <![CDATA[${execution.getVariable('pwdResetFlowType') == '2FA'}]]>
            </conditionExpression>
          </sequenceFlow>
          <sequenceFlow id="is_option_one_fa" sourceRef="decision_two_fa_or_one_fa" targetRef="reset_password_user_task">
            <conditionExpression xsi:type="tFormalExpression">
              <![CDATA[${execution.getVariable('pwdResetFlowType') != '2FA'}]]>
            </conditionExpression>
          </sequenceFlow>

          <userTask id="token_validation_failed" name="token_validation_failed"/>
          <sequenceFlow sourceRef="token_validation_failed" targetRef="pwd_reset_end_event"/>

          <boundaryEvent id="pwd_reset_token_validation_failed" attachedToRef="token_validation_failed"  cancelActivity="true">
            <timerEventDefinition>
              <timeDuration>${workflowEngineProperties.getFinalStepTimerDuration()}</timeDuration>
            </timerEventDefinition>
          </boundaryEvent>
          <sequenceFlow sourceRef="pwd_reset_token_validation_failed" targetRef="pwd_reset_end_event"/>

          <!-- Password input from user -->
          <userTask id="reset_password_user_task" name="pwd_reset_set_password_step"/>
          <sequenceFlow sourceRef="reset_password_user_task" targetRef="check_if_password_is_provided"/>

          <!-- Check if password is provided -->
          <serviceTask id="check_if_password_is_provided" name="check_if_password_is_provided" activiti:delegateExpression="${inputProvidedTask}">
            <extensionElements>
              <activiti:field name="fieldNames" stringValue="urn:scim:schemas:core:1.0:password"/>
            </extensionElements>
          </serviceTask>
          <sequenceFlow sourceRef="check_if_password_is_provided" targetRef="password_provided_decision"/>

          <exclusiveGateway id="password_provided_decision"  name="password_provided_decision"/>
          <sequenceFlow id="is_pwd_provided_flow" sourceRef="password_provided_decision" targetRef="validate_password_service">
            <conditionExpression xsi:type="tFormalExpression">${isStepSuccessful == true}</conditionExpression>
          </sequenceFlow>
          <sequenceFlow id="is_pwd_not_provided_flow" sourceRef="password_provided_decision" targetRef="reset_password_user_task">
            <conditionExpression xsi:type="tFormalExpression">${isStepSuccessful == false}</conditionExpression>
          </sequenceFlow>
          <!-- End to check password -->

          <!-- Validate password from user -->
          <serviceTask id="validate_password_service" name="registration_password_step" activiti:delegateExpression="${validationTask}"/>
          <sequenceFlow sourceRef="validate_password_service" targetRef="validation_password_decision"/>

          <exclusiveGateway id="validation_password_decision"/>
          <sequenceFlow id="is_valid_pwd_flow" sourceRef="validation_password_decision" targetRef="patch_user_password_task">
            <conditionExpression xsi:type="tFormalExpression">${isStepSuccessful == true}</conditionExpression>
          </sequenceFlow>
          <sequenceFlow id="is_not_valid_pwd_flow" sourceRef="validation_password_decision" targetRef="reset_password_user_task">
            <conditionExpression xsi:type="tFormalExpression">${isStepSuccessful == false}</conditionExpression>
          </sequenceFlow>
          <!-- End validation -->

          <serviceTask id="patch_user_password_task" name="pwd_reset_patch_user_password" activiti:delegateExpression="${changePasswordTask}"/>
          <sequenceFlow sourceRef="patch_user_password_task" targetRef="change_password_decision"/>

          <exclusiveGateway id="change_password_decision"/>
          <sequenceFlow id="is_valid_pwd_change_flow" sourceRef="change_password_decision" targetRef="logout_step">
            <conditionExpression xsi:type="tFormalExpression">${isStepSuccessful == true}</conditionExpression>
          </sequenceFlow>
          <sequenceFlow id="is_not_valid_pwd_change_flow" sourceRef="change_password_decision" targetRef="reset_password_user_task">
            <conditionExpression xsi:type="tFormalExpression">${isStepSuccessful == false}</conditionExpression>
          </sequenceFlow>

          <exclusiveGateway id="token_present_decision"/>
          <sequenceFlow id="is_token_not_present" sourceRef="token_present_decision" targetRef="generate_confirmation_token">
            <conditionExpression xsi:type="tFormalExpression">
              <![CDATA[${execution.getVariable('option') == 'otp'}]]>
            </conditionExpression>
          </sequenceFlow>
          <sequenceFlow id="is_token_present" sourceRef="token_present_decision" targetRef="send_confirmation_email_service">
            <conditionExpression xsi:type="tFormalExpression">
              <![CDATA[${execution.getVariable('option') != 'otp'}]]>
            </conditionExpression>
          </sequenceFlow>

          <serviceTask id="generate_confirmation_token" name="generate_activation_token" activiti:delegateExpression="${generateTokenTask}">
            <extensionElements>
              <activiti:field name="tokenType" stringValue="PASSWORD_RESET_TOKEN"/>
            </extensionElements>
          </serviceTask>
          <sequenceFlow sourceRef="generate_confirmation_token" targetRef="token_generation_confirmation_gateway"/>

          <exclusiveGateway id="token_generation_confirmation_gateway" name="token_generation_confirmation_gateway"/>
          <sequenceFlow id="token_generation_successful" sourceRef="token_generation_confirmation_gateway" targetRef="send_confirmation_email_service">
            <conditionExpression xsi:type="tFormalExpression">${isStepSuccessful == true}</conditionExpression>
          </sequenceFlow>
          <sequenceFlow id="token_generation_failure" sourceRef="token_generation_confirmation_gateway" targetRef="email_sending_failed_step">
            <conditionExpression xsi:type="tFormalExpression">${isStepSuccessful == false}</conditionExpression>
          </sequenceFlow>

          <serviceTask id="delete_token_service" name="pwd_reset_delete_token_step" activiti:delegateExpression="${deleteTokenTask}">
            <extensionElements>
              <activiti:field name="tokenType" stringValue="PASSWORD_RESET_TOKEN"/>
            </extensionElements>
          </serviceTask>
          <sequenceFlow sourceRef="delete_token_service" targetRef="last_step"/>

          <serviceTask id="send_confirmation_email_service" name="send_confirmation_email_service" activiti:delegateExpression="${emailSenderTask}">
            <extensionElements>
              <activiti:field name="emailTemplate" stringValue="confirmationEmail"/>
              <activiti:field name="tokenType" stringValue="PASSWORD_RESET_TOKEN"/>
            </extensionElements>
          </serviceTask>
          <sequenceFlow sourceRef="send_confirmation_email_service" targetRef="delete_token_service"/>

          <userTask id="not_authorized_task" name="pwd_reset_not_authorized"/>
          <sequenceFlow sourceRef="not_authorized_task" targetRef="pwd_reset_end_event"/>

          <boundaryEvent id="notAuthorizedStepTimer" attachedToRef="not_authorized_task"  cancelActivity="true">
            <timerEventDefinition>
              <timeDuration>${workflowEngineProperties.getFinalStepTimerDuration()}</timeDuration>
            </timerEventDefinition>
          </boundaryEvent>
          <sequenceFlow id="not_authorized_timer_step" sourceRef="notAuthorizedStepTimer" targetRef="pwd_reset_end_event"/>

          <userTask id="logout_step" name="pwd_reset_logout_devices"/>
          <sequenceFlow sourceRef="logout_step" targetRef="check_if_logout_everywhere_is_provided"/>

          <!-- Check if logoutEverywhere is provided -->
          <serviceTask id="check_if_logout_everywhere_is_provided" activiti:delegateExpression="${inputProvidedTask}">
            <extensionElements>
              <activiti:field name="fieldNames" stringValue="logoutEverywhere"/>
            </extensionElements>
          </serviceTask>
          <sequenceFlow sourceRef="check_if_logout_everywhere_is_provided" targetRef="logout_everywhere_provided_decision"/>

          <!-- Exclusive gateway for logoutEverywhere -->
          <exclusiveGateway id="logout_everywhere_provided_decision"/>
          <sequenceFlow id="is_logout_everywhere_provided_flow" sourceRef="logout_everywhere_provided_decision" targetRef="logout_devices_service">
            <conditionExpression xsi:type="tFormalExpression">${isStepSuccessful == true}</conditionExpression>
          </sequenceFlow>
          <sequenceFlow id="is_logout_everywhere_not_provided_flow" sourceRef="logout_everywhere_provided_decision" targetRef="logout_step">
            <conditionExpression xsi:type="tFormalExpression">${isStepSuccessful == false}</conditionExpression>
          </sequenceFlow>
          <!-- End to check logoutEverywhere -->

          <serviceTask id="logout_devices_service" activiti:delegateExpression="${logoutDevicesTask}"/>
          <sequenceFlow sourceRef="logout_devices_service" targetRef="token_present_decision"/>

          <userTask id="email_sending_failed_step" name="pwd_reset_email_sent_step"/>
          <sequenceFlow sourceRef="email_sending_failed_step" targetRef="pwd_reset_end_event"/>

          <boundaryEvent id="finalTimerFailureStep" attachedToRef="email_sending_failed_step">
            <timerEventDefinition>
              <timeDuration>${workflowEngineProperties.getFinalStepTimerDuration()}</timeDuration>
            </timerEventDefinition>
          </boundaryEvent>
          <sequenceFlow id="final_timer_failure_step" sourceRef="finalTimerFailureStep" targetRef="pwd_reset_end_event"/>

          <userTask id="last_step" name="pwd_reset_thanks"/>
          <sequenceFlow sourceRef="last_step" targetRef="pwd_reset_end_event"/>

          <boundaryEvent id="finalStepTimer" attachedToRef="last_step">
            <timerEventDefinition>
              <timeDuration>${workflowEngineProperties.getFinalStepTimerDuration()}</timeDuration>
            </timerEventDefinition>
          </boundaryEvent>
          <sequenceFlow id="final_timer_step" sourceRef="finalStepTimer" targetRef="pwd_reset_end_event"/>

          <endEvent id="pwd_reset_end_event" name="End">
            <extensionElements>
            <activiti:executionListener event="end" delegateExpression="${processEndEventListener}"/>
            </extensionElements>
          </endEvent>
        </process>
      </definitions>